name: "Terraform Plan/Apply"

on: 
    push:
        branches:
            - main

jobs: 
    terraform-plan: 
        name: "Terraform Plan"
        runs-on: ubuntu-latest
        permissions: 
            id-token: write # This is required for requesting the JWT
            contents: read  # This is required for actions/checkout

        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v4

              
            - name: Azure login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_wrapper: false

            - name: Terraform Init
              run: terraform init
              env:
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                ARM_USE_MSI: true


            
            # Generates an execution plan for Terraform
            # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes.
            - name: Terraform Plan
              env: 
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
              id: tf-plan
              run: |
                export exitcode=0
                terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

                echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
                
                if [ $exitcode -eq 1 ]; then
                    echo Terraform Plan Failed!
                    exit 1
                else 
                    exit 0
                fi

            - name: Publish Terraform Plan
              uses: actions/upload-artifact@v4
              with:
                  name: tfplan
                  path: tfplan

            - name: Create String Output
              id: tf-plan-string
              run: |
                TERRAFORM_PLAN=$(terraform show -no-color tfplan)
                
                delimiter="$(openssl rand -hex 8)"
                echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
                echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
                echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
                echo "" >> $GITHUB_OUTPUT
                echo '```terraform' >> $GITHUB_OUTPUT
                echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
                echo '```' >> $GITHUB_OUTPUT
                echo "</details>" >> $GITHUB_OUTPUT
                echo "${delimiter}" >> $GITHUB_OUTPUT

            - name: Publish Terraform Plan to Task Summary
              env:
                SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
              run: |
                echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

            - name: Terraform Apply
              run: terraform apply -auto-approve tfplan